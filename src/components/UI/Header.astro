---
import { Download } from "lucide-preact";
import ThemeDropdown from "@components/UI/ThemeDropdown.astro";
import ThemeButton from "@components/UI/ThemeButton.astro";

const { config } = Astro.props;

const isDev = import.meta.env.ENVIRONMENT === "development";
const isNightly = Astro.url.origin.includes("chiragchrg-nightly.netlify.app");

const showThemeDropdown = isDev || isNightly;
---

<header
    id="header"
    class="hidden lg:block sticky top-0 max-w-[1800px] mx-auto z-50"
>
    <div
        class="flex justify-between items-center w-full px-6 py-2 headerGradient backdrop-blur-[2px]"
    >
        <a href="#home" class="Fade_Down font-satisfy font-bold text-[2em]">
            <span class="gradientText w-fit">{config.logotext}</span>
        </a>

        <nav class="Header_Nav relative tracking-wide flex gap-6">
            <a class="Fade_Down" href="#about">ABOUT</a>
            <a class="Fade_Down" href="#skills">SKILLS</a>
            <a class="Fade_Down" href="#projects">PROJECTS</a>
            <a class="Fade_Down" href="#contact">CONTACT</a>
        </nav>

        <div class="flex_center gap-4">
            {showThemeDropdown && <ThemeDropdown className="Fade_Down" />}
            <ThemeButton className="Fade_Down" />

            <a
                class="Fade_Down Header_ActionBtn relative overflow-hidden rounded-sm flex_center"
                href={config.actionButton.url}
                target="_blank"
            >
                <div class="flex_center gap-2">
                    <p>{config.actionButton.text}</p>
                    <Download size={18} />
                </div>
            </a>
        </div>
    </div>
</header>

<script is:inline type="module">
    const headerElement = document.getElementById("header");
    const sectionsList = {
        "#home": document.getElementById("home"),
        "#about": document.getElementById("about"),
        "#skills": document.getElementById("skills"),
        "#projects": document.getElementById("projects"),
        "#contact": document.getElementById("contact"),
    };

    const headerHeight = headerElement.offsetHeight;

    // Set Active class on section scroll
    const handleScroll = () => {
        for (const [linkHref, section] of Object.entries(sectionsList)) {
            if (!section) return;

            const rect = section.getBoundingClientRect();
            const link = document.querySelector(
                `#header a[href="${linkHref}"]`,
            );

            if (
                link &&
                headerElement &&
                rect.top <= headerHeight &&
                rect.bottom >= headerHeight
            ) {
                link?.classList.add("active");
            } else {
                link?.classList.remove("active");
            }
        }
    };

    function debounce(func, delay) {
        let timeoutId;
        return function (...args) {
            clearTimeout(timeoutId);
            timeoutId = setTimeout(() => {
                func.apply(this, args);
            }, delay);
        };
    }

    window.addEventListener("scroll", debounce(handleScroll, 0));
    handleScroll();
</script>

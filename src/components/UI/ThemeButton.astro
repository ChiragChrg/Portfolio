---
type Props = {
    className?: string;
};
const { className }: Props = Astro.props;
---

<button
    id="themeToggleBtn"
    title="Toggle Theme"
    class={`aspect-square w-8 h-8 outline-2 outline-primaryLiteAlt rounded-full relative flex_center ${className}`}
>
    <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        id="themeSunSvg"
        class="lucide lucide-sun absolute"
        style="visibility: hidden;"
        ><circle cx="12" cy="12" r="4"></circle><path d="M12 2v2"></path><path
            d="M12 20v2"></path><path d="m4.93 4.93 1.41 1.41"></path><path
            d="m17.66 17.66 1.41 1.41"></path><path d="M2 12h2"></path><path
            d="M20 12h2"></path><path d="m6.34 17.66-1.41 1.41"></path><path
            d="m19.07 4.93-1.41 1.41"></path></svg
    >

    <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        id="themeMoonSvg"
        class="lucide lucide-moon-star absolute"
        style="visibility: visible;"
        ><path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9"></path><path d="M20 3v4"
        ></path><path d="M22 5h-4"></path></svg
    >
</button>

<script is:inline type="module">
    // Handle theme toggling (light/dark mode)
    if (!window.themeInitialized) {
        window.themeInitialized = true;

        const themeToggleBtn = document.getElementById("themeToggleBtn");
        const lightThemeBtn = document.getElementById("themeSunSvg");
        const darkThemeBtn = document.getElementById("themeMoonSvg");

        const THEME_KEY = "chiragchrg-portfolio-theme";
        const THEME_NAME_KEY = "chiragchrg-portfolio-theme-name";

        const setTheme = (mode) => {
            // Update document element class for light/dark mode
            document.documentElement.classList.remove("light", "dark");
            document.documentElement.classList.add(mode);

            // Update button visibility
            if (mode === "light") {
                lightThemeBtn.style.visibility = "visible";
                darkThemeBtn.style.visibility = "hidden";
            } else {
                lightThemeBtn.style.visibility = "hidden";
                darkThemeBtn.style.visibility = "visible";
            }

            // Save to localStorage
            try {
                localStorage.setItem(THEME_KEY, mode);
            } catch (_e) {
                console.warn("Failed to save theme:", _e);
            }
        };

        // Get current theme from localStorage or system preference
        function getCurrentTheme() {
            try {
                const saved = localStorage.getItem(THEME_KEY);

                return saved || "dark";
            } catch (_e) {
                console.log("Error getting theme, defaulting to dark");
                return "dark";
            }
        }

        // Initialize theme
        const savedTheme = getCurrentTheme();
        const savedThemeName =
            localStorage.getItem(THEME_NAME_KEY) || "default";

        // Ensure theme class is applied
        const currentThemeClasses = Array.from(
            document.documentElement.classList,
        ).filter((cls) => cls.startsWith("theme-"));

        if (currentThemeClasses.length === 0) {
            document.documentElement.classList.add(`theme-${savedThemeName}`);
        }

        setTheme(savedTheme);

        // Toggle theme function (only toggles light/dark)
        const toggleTheme = () => {
            const isDark = document.documentElement.classList.contains("dark");
            const newMode = isDark ? "light" : "dark";
            setTheme(newMode);
        };

        // Toggle theme on button click
        themeToggleBtn.addEventListener("click", toggleTheme);

        // Global function for external access
        window.toggleTheme = toggleTheme;
    }
</script>

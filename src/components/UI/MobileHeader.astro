---
import { Download } from "lucide-preact";
import ThemeButton from "@/components/UI/ThemeButton.astro";
import ThemeDropdown from "@/components/UI/ThemeDropdown.astro";

const { config } = Astro.props;

const isDev = import.meta.env.DEV;
const isNightly = Astro.url.origin.includes("chiragchrg-nightly.netlify.app");

const showThemeDropdown = isDev || isNightly;
---

<header
    class="lg:hidden w-full sticky top-0 z-50 headerGradient backdrop-blur-[2px]"
>
    <div class="flex justify-between items-center py-2 px-4">
        <a href="#home" class="Fade_In font-satisfy font-bold text-[2em]">
            <span class="gradientText w-fit">{config.logotext}</span>
        </a>

        <svg
            viewBox="20 20 60 60"
            width="45"
            class="Fade_In MobileNav_Ham flex justify-center items-end flex-col gap-2 z-70 cursor-pointer"
            id="Ham_Menu"
        >
            <path
                class="line top"
                d="m 30,33 h 40 c 3.722839,0 7.5,3.126468 7.5,8.578427 0,5.451959 -2.727029,8.421573 -7.5,8.421573 h -20"
            ></path>
            <path class="line middle" d="m 30,50 h 40"></path>
            <path
                class="line bottom"
                d="m 70,67 h -40 c 0,0 -7.5,-0.802118 -7.5,-8.365747 0,-7.563629 7.5,-8.634253 7.5,-8.634253 h 20"
            ></path>
        </svg>
    </div>

    <nav
        id="mobileHeaderNav"
        style="clip-path: circle(30px at calc(100vw + 30px) -30px);"
        class="w-full h-dvh flex_center flex-col fixed top-0 right-0 gap-8 z-60"
    >
        <div class="MobileHeader_Nav flex_center">
            <a href="#about">About</a>
        </div>

        <div class="MobileHeader_Nav flex_center">
            <a href="#skills">Skills</a>
        </div>

        <div class="MobileHeader_Nav flex_center">
            <a href="#projects">Projects</a>
        </div>

        <div class="MobileHeader_Nav flex_center">
            <a href="#contact">Contact</a>
        </div>

        <div class="MobileHeader_Nav flex_center">
            <a
                class="MobileHeader_ActionBtn flex_center"
                href={config.actionButton.url}
                target="_blank"
            >
                <div class="flex_center gap-4">
                    <p>{config.actionButton.text}</p>
                    <Download />
                </div>
            </a>
        </div>

        <div
            onclick="window.toggleTheme()"
            class="MobileHeader_Nav flex_center"
        >
            {showThemeDropdown && <ThemeDropdown />}
            <ThemeButton />
        </div>
    </nav>
</header>

<script is:inline type="module">
    const headerElement = document.getElementById("mobileHeaderNav");
    const sectionsList = {
        "#home": document.getElementById("home"),
        "#about": document.getElementById("about"),
        "#skills": document.getElementById("skills"),
        "#projects": document.getElementById("projects"),
        "#contact": document.getElementById("contact"),
    };

    const headerHeight = headerElement.offsetHeight;

    // Set Active class on section scroll
    const handleScroll = () => {
        for (const [linkHref, section] of Object.entries(sectionsList)) {
            if (!section) return;

            const rect = section.getBoundingClientRect();
            const link = document.querySelector(
                `#mobileHeaderNav a[href="${linkHref}"]`,
            );

            if (
                link &&
                headerElement &&
                rect.top <= headerHeight &&
                rect.bottom >= headerHeight
            ) {
                link?.classList.add("active");
            } else {
                link?.classList.remove("active");
            }
        }
    };

    function throttle(func, limit) {
        let throttling = false;
        return function (...args) {
            if (!throttling) {
                func.apply(this, args);
                throttling = true;
                setTimeout(() => {
                    throttling = false;
                }, limit);
            }
        };
    }

    window.addEventListener("scroll", throttle(handleScroll, 16));
    handleScroll(); // Initial call

    // Theme Toggle Script for Mobile screens
    // const themeToggleBtn = document.getElementById("themeToggleMobile");
    // const lightThemeBtn = document.getElementById("themeSunSvgMobile");
    // const darkThemeBtn = document.getElementById("themeMoonSvgMobile");

    // let currentTheme = localStorage.getItem("chiragchrg-portfolio-theme");
    // if (currentTheme == "light") {
    //     document.documentElement.classList.add("light");
    //     darkThemeBtn.style.visibility = "hidden";
    //     lightThemeBtn.style.visibility = "visible";
    // } else {
    //     document.documentElement.classList.remove("light");
    //     darkThemeBtn.style.visibility = "visible";
    //     lightThemeBtn.style.visibility = "hidden";
    // }

    // themeToggleBtn.addEventListener("click", () => {
    //     if (document.documentElement.classList.contains("light")) {
    //         darkThemeBtn.style.visibility = "visible";
    //         lightThemeBtn.style.visibility = "hidden";
    //         document.documentElement.classList.remove("light");
    //         localStorage.setItem("chiragchrg-portfolio-theme", "dark");
    //     } else {
    //         darkThemeBtn.style.visibility = "hidden";
    //         lightThemeBtn.style.visibility = "visible";
    //         document.documentElement.classList.add("light");
    //         localStorage.setItem("chiragchrg-portfolio-theme", "light");
    //     }
    // });
</script>
